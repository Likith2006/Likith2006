# -*- coding: utf-8 -*-
"""skill-test-02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/Likith2006/e70a31a995b29559a06764c0ae209a0e/skill-test-02.ipynb
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
df=pd.read_csv("/content/archive (7).zip")

df.describe()

df.head()

df.tail

df.info()

df.nunique

df.isnull().sum()

(df.isnull().sum()/(len(df)))

df.describe().T

#unique function
print(df.loan_id.unique())
print(df.loan_id.nunique())

import pandas as pd
import numpy as np
data={'A':[8,5,np.NaN,7,5],
      'B':[np.NaN,5,3,7,np.NaN],
      'c':[8,5,3,np.NaN,np.NaN]
      }
df = pd. DataFrame(data)
print(df)

df1=df.dropna()
print(df1)

df2=df.dropna(axis=1)
print(df2)

df3=df.fillna(df.mean())
print(df3)

import pandas as pd

data = pd.Series([200, 230, 260, 80, 1000, 240, 300, 450, 600])
upper_cap = 400
lower_cap = 50

data_clipped = data.clip(lower=lower_cap, upper=upper_cap)
print("Data with capped outliers:", data_clipped)

import numpy as np
import pandas as pd

data = pd.Series([200, 230, 260, 80, 1000, 240, 300, 450, 600])
data_log_transformed = np.log(data)
print("Log-transformed data:", data_log_transformed)

import pandas as pd

data = pd.Series([200, 230, 260, 80, 1000, 240, 300, 450, 600])
outliers = [1000]
data_cleaned = data[~data.isin(outliers)]
print("Data with outliers removed:", data_cleaned)

import pandas as pd
data=pd.Series([60,22,45,8,600,108,200,205,310])
z_scores=(data-data.mean())/data.std()
outliers=data[abs(z_scores)>3]
print("univariate outliers:",outliers)

